{"ast":null,"code":"var _jsxFileName = \"/Users/mmahes11/Documents/MTECH_ASSIGNMENT/FSE-UI/src/components/StudentList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport StudentForm from \"./StudentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialStudents = [{\n  name: \"Alice\",\n  className: \"10A\",\n  age: \"15\",\n  vaccinationStatus: \"Vaccinated\"\n}, {\n  name: \"Bob\",\n  className: \"10B\",\n  age: \"16\",\n  vaccinationStatus: \"Not Vaccinated\"\n}];\nconst StudentList = () => {\n  _s();\n  const [students, setStudents] = useState(initialStudents);\n\n  // For add/edit drawer\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [editingStudent, setEditingStudent] = useState(null);\n\n  // Handle opening the drawer for adding a student\n  const handleAddStudent = () => {\n    setEditingStudent(null); // No student selected -> add new\n    setDrawerOpen(true);\n  };\n\n  // Handle opening the drawer for editing a student\n  const handleEditStudent = student => {\n    setEditingStudent(student); // Set the student to edit\n    setDrawerOpen(true);\n  };\n\n  // Handle form submit for add/edit\n  const handleFormSubmit = form => {\n    if (editingStudent) {\n      // Edit mode: update student in list\n      setStudents(students.map(s => s.name === editingStudent.name && s.className === editingStudent.className // or use a real unique id\n      ? form : s));\n    } else {\n      // Add mode: append new student\n      setStudents([...students, form]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddStudent,\n      children: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map((s, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [s.name, \" - \", s.className, \" - \", s.age, \" - \", s.vaccinationStatus, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditStudent(s),\n          style: {\n            marginLeft: 8\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StudentForm, {\n      open: drawerOpen,\n      onClose: () => setDrawerOpen(false),\n      onSubmit: handleFormSubmit,\n      student: editingStudent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(StudentList, \"RYjaSLxrO6TgfSU4U91xBagI6UE=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useState","StudentForm","jsxDEV","_jsxDEV","initialStudents","name","className","age","vaccinationStatus","StudentList","_s","students","setStudents","drawerOpen","setDrawerOpen","editingStudent","setEditingStudent","handleAddStudent","handleEditStudent","student","handleFormSubmit","form","map","s","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","idx","style","marginLeft","open","onClose","onSubmit","_c","$RefreshReg$"],"sources":["/Users/mmahes11/Documents/MTECH_ASSIGNMENT/FSE-UI/src/components/StudentList.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport StudentForm from \"./StudentForm\";\n\ntype Student = {\n    name: string;\n    className: string;\n    age: string;\n    vaccinationStatus: string;\n};\n\nconst initialStudents: Student[] = [\n    {\n        name: \"Alice\",\n        className: \"10A\",\n        age: \"15\",\n        vaccinationStatus: \"Vaccinated\"\n    },\n    {\n        name: \"Bob\",\n        className: \"10B\",\n        age: \"16\",\n        vaccinationStatus: \"Not Vaccinated\"\n    }\n];\n\nconst StudentList: React.FC = () => {\n    const [students, setStudents] = useState<Student[]>(initialStudents);\n\n    // For add/edit drawer\n    const [drawerOpen, setDrawerOpen] = useState(false);\n    const [editingStudent, setEditingStudent] = useState<Student | null>(null);\n\n    // Handle opening the drawer for adding a student\n    const handleAddStudent = () => {\n        setEditingStudent(null);    // No student selected -> add new\n        setDrawerOpen(true);\n    };\n\n    // Handle opening the drawer for editing a student\n    const handleEditStudent = (student: Student) => {\n        setEditingStudent(student); // Set the student to edit\n        setDrawerOpen(true);\n    };\n\n    // Handle form submit for add/edit\n    const handleFormSubmit = (form: Student) => {\n        if (editingStudent) {\n            // Edit mode: update student in list\n            setStudents(students.map(s =>\n                s.name === editingStudent.name && s.className === editingStudent.className // or use a real unique id\n                    ? form\n                    : s\n            ));\n        } else {\n            // Add mode: append new student\n            setStudents([...students, form]);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Students</h2>\n            <button onClick={handleAddStudent}>Add Student</button>\n            <ul>\n                {students.map((s, idx) => (\n                    <li key={idx}>\n                        {s.name} - {s.className} - {s.age} - {s.vaccinationStatus}\n                        <button onClick={() => handleEditStudent(s)} style={{marginLeft: 8}}>Edit</button>\n                    </li>\n                ))}\n            </ul>\n            <StudentForm\n                open={drawerOpen}\n                onClose={() => setDrawerOpen(false)}\n                onSubmit={handleFormSubmit}\n                student={editingStudent}\n            />\n        </div>\n    );\n};\n\nexport default StudentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}